{
  "swagger": "2.0",
  "info": {
    "title": "GoneBusy",
    "description": "GoneBusy Booking Platform API Swagger Documentation",
    "termsOfService": "https://beta.gonebusy.com/basic_agreement",
    "version": "1.0"
  },
  "host": "sandbox.gonebusy.com",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Return all Users that your account has access to.  Includes your own User as well as any Users for which you are the Account Manager.",
        "description": "Return all Users that your account has access to.  Includes your own User as well as any Users for which you are the Account Manager.",
        "operationId": "get_users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "A valid API key, in the format 'Token API_KEY'",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page offset to fetch.",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Entities::Error"
            }
          },
          "401": {
            "description": "Unauthorized/Missing Token",
            "schema": {
              "$ref": "#/definitions/Entities::Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Entities::Error"
            }
          },
          "200": {
            "description": "Successful result of the operation",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/Entities::UserResponse"
                  }
                }
              }
            },
            "headers": {
              "x-request-id": {
                "description": "unique id of the API request",
                "type": "string"
              },
              "x-runtime": {
                "description": "time spent processing the API request in msecs",
                "type": "string"
              },
              "x-total": {
                "description": "total number of resources",
                "type": "integer"
              },
              "x-total-pages": {
                "description": "total number of pages",
                "type": "integer"
              },
              "x-page": {
                "description": "current page",
                "type": "integer"
              },
              "x-prev-page": {
                "description": "previous page",
                "type": "integer"
              },
              "x-next-page": {
                "description": "next page",
                "type": "integer"
              },
              "x-per-page": {
                "description": "number of resources per page",
                "type": "integer"
              },
              "x-offset": {
                "description": "requested resource offset",
                "type": "integer"
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "Entities::AddressEntity": {
      "type": "object",
      "properties": {
        "line1": {
          "type": "string",
          "description": "line 1 of Address"
        },
        "line2": {
          "type": "string",
          "description": "line 2 of Address"
        },
        "city": {
          "type": "string",
          "description": "city of Address"
        },
        "state": {
          "type": "string",
          "description": "state of Address"
        },
        "province": {
          "type": "string",
          "description": "province of Address"
        },
        "postal_code": {
          "type": "string",
          "description": "postal code of Address"
        },
        "country": {
          "type": "string",
          "description": "country of Address"
        },
        "country_code": {
          "type": "string",
          "description": "country code of Address"
        },
        "latitude": {
          "type": "string",
          "description": "latitude of Address"
        },
        "longitude": {
          "type": "string",
          "description": "longitude of Address"
        }
      }
    },
    "Entities::AvailabilityResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Service"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of owner of Service"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Entities::ResourceAvailabilities"
          },
          "description": "array of Resource ids and available time slots"
        }
      }
    },
    "Entities::BookingResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Booking"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of owner of Booking"
        },
        "workflow_state": {
          "type": "string",
          "description": "status of Booking"
        },
        "user_message": {
          "type": "string",
          "description": "user requesting Booking may include a message"
        },
        "time_window": {
          "type": "object",
          "$ref": "#/definitions/Entities::TimeWindowResponse",
          "description": "TimeWindow corresponding to Booking"
        }
      }
    },
    "Entities::CategoryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Category"
        },
        "name": {
          "type": "string",
          "description": "name of Category"
        },
        "short_name": {
          "type": "string",
          "description": "abbreviated name for Category"
        },
        "long_name": {
          "type": "string",
          "description": "extended name for Category"
        },
        "description": {
          "type": "string",
          "description": "description of Category"
        },
        "parent_category_id": {
          "type": "integer",
          "description": "id of parent Category, if any"
        },
        "is_active": {
          "type": "boolean",
          "description": "status of Category"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "array of subcategory ids, if any"
        }
      }
    },
    "Entities::Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "description of error"
        }
      }
    },
    "Entities::PricingModelResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of PricingModel"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of owner of PricingModel"
        },
        "name": {
          "type": "string",
          "description": "name of PricingModel"
        },
        "notes": {
          "type": "string",
          "description": "notes and description"
        },
        "pricing_model_type": {
          "type": "string",
          "description": "type of PricingModel"
        },
        "price": {
          "type": "string",
          "description": "price/rate"
        },
        "currency": {
          "type": "string",
          "description": "currency symbol, as per ISO-4217"
        }
      }
    },
    "Entities::ResourceAvailabilities": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Resource"
        },
        "available_slots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Entities::Slots"
          },
          "description": "array of available date and time slots"
        }
      }
    },
    "Entities::ResourceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Resource"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of User owning Resource"
        },
        "name": {
          "type": "string",
          "description": "name of Resource"
        },
        "description": {
          "type": "string",
          "description": "description of Resource"
        },
        "resource_type": {
          "type": "string",
          "description": "type of Resource"
        },
        "capacity": {
          "type": "integer",
          "description": "capacity of Resource, if applicable"
        },
        "gender": {
          "type": "integer",
          "description": "gender of Resource, if applicable"
        },
        "thing_type_id": {
          "type": "integer",
          "description": "type Id of Thing Resource, if applicable"
        }
      }
    },
    "Entities::ScheduleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Schedule"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of owner of Schedule"
        },
        "resource_id": {
          "type": "integer",
          "description": "id of Resource"
        },
        "service_id": {
          "type": "integer",
          "description": "id of Service"
        },
        "time_windows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Entities::TimeWindowResponse"
          },
          "description": "array of TimeWindows making up Schedule"
        }
      }
    },
    "Entities::SearchResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Entities::UserResponse"
          },
          "description": "array of Users matching query"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/Entities::ServiceResponse"
          },
          "description": "array of Services matching query"
        }
      }
    },
    "Entities::ServiceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Service"
        },
        "owner_id": {
          "type": "integer",
          "description": "id of owner of Service"
        },
        "name": {
          "type": "string",
          "description": "name of Service"
        },
        "short_name": {
          "type": "string",
          "description": "abbreviated name for Service"
        },
        "duration": {
          "type": "integer",
          "description": "length of Service in minutes"
        },
        "max_duration": {
          "type": "integer",
          "description": "max length of Service in minutes"
        },
        "description": {
          "type": "string",
          "description": "description of Service"
        },
        "price_model_id": {
          "type": "integer",
          "description": "id of Pricing Model"
        },
        "is_active": {
          "type": "boolean",
          "description": "status of Service"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "array of Resource ids offering Service"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "array of Category ids Service belongs to"
        }
      }
    },
    "Entities::Slots": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "date of availability"
        },
        "slots": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "array of available time slots"
        }
      }
    },
    "Entities::ThingTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of Category"
        },
        "name": {
          "type": "string",
          "description": "name of Category"
        }
      }
    },
    "Entities::TimeWindowResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of TimeWindow"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "end date"
        },
        "start_time": {
          "type": "string",
          "description": "start time"
        },
        "end_time": {
          "type": "string",
          "description": "end time"
        },
        "total_minutes": {
          "type": "integer",
          "description": "total minutes spanned"
        },
        "recurs_by": {
          "type": "string",
          "description": "recurs by"
        },
        "frequency": {
          "type": "string",
          "description": "frequency"
        },
        "occurrence": {
          "type": "string",
          "description": "occurrence"
        },
        "date_recurs_by": {
          "type": "string",
          "description": "date_recurs_by"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "array of days of week TimeWindow falls on"
        },
        "negation": {
          "type": "boolean",
          "description": "true is available, false is unavailable"
        }
      }
    },
    "Entities::UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id of User"
        },
        "resource_id": {
          "type": "integer",
          "description": "id of defacto Resource for User"
        },
        "account_manager_id": {
          "type": "integer",
          "description": "id of Account Manager user for User"
        },
        "email": {
          "type": "string",
          "description": "email of User"
        },
        "phone": {
          "type": "string",
          "description": "phone number of User"
        },
        "first_name": {
          "type": "string",
          "description": "first name of User"
        },
        "last_name": {
          "type": "string",
          "description": "last name of User"
        },
        "disabled": {
          "type": "boolean",
          "description": "status of user"
        },
        "business_name": {
          "type": "string",
          "description": "business name for User"
        },
        "external_url": {
          "type": "string",
          "description": "external url to business"
        },
        "permalink": {
          "type": "string",
          "description": "permalink of User"
        },
        "timezone": {
          "type": "string",
          "description": "timezone of User, "
        },
        "address": {
          "type": "object",
          "$ref": "#/definitions/Entities::AddressEntity",
          "description": "address of User"
        },
        "role": {
          "type": "string",
          "description": "User account type"
        }
      }
    },
    "Integer": {
      "type": "integer"
    },
    "String": {
      "type": "string"
    }
  },
  "security": [
    {
      "api_key": [

      ]
    }
  ]
}
